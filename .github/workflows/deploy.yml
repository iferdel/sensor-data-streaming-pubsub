name: deploy container images to repository

on:
  push:
    branches: [ main ]

jobs:

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    env:
      GOFLAGS: -mod=vendor
      GOPROXY: "off"

    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Set up Go 1.23
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: Test
      run: |
        make test

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: cloud
        endpoint: "iferdel777/iot"
        install: true

    - name: Read version
      id: read_version
      run: echo "VERSION=$(cat cmd/sensor-simulation/version.txt)" >> $GITHUB_ENV
    
    - name: Build & Push with Docker Build-Push Action
    #   if: contains(steps.changed.outputs.all_changed_files, 'cmd/sensor-simulation/')
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./cmd/sensor-simulation/Dockerfile
        push: true
        platforms: linux/amd64
        tags: |
          ${{ vars.DOCKERHUB_USERNAME }}/iot-sensor-simulation:${{ github.sha }}
          ${{ vars.DOCKERHUB_USERNAME }}/iot-sensor-simulation:${{ env.VERSION }}
        target: staging
        provenance: false # this allows the provenance to be created/managed by docker build cloud and not by this build-push-action
    
    # CLI
    - name: GoRelease for iotctl (non-containerized release)
      uses: goreleaser/goreleaser-action@v6
      with:
        distribution: goreleaser
        version: '~> v2'
        args: release --clean --tag ${{ env.VERSION }}
        workdir: cmd/iotctl
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

