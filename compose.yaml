services:
  rabbitmq: &rabbitmq
    build: dependencies/rabbitmq/
    container_name: iot-rabbitmq
    ports:
      - "5672:5672"   # RabbitMQ main port
      - "15692:15692"   # RabbitMQ exposes the metrics on a dedicated TCP port, 15692 by default.
      - "15672:15672" # Management UI port
      - "1883:1883" # MQTT
      - "5552:5552" # Stream plugin
    hostname: iot-rabbitmq
    environment:
      METRICS_PROMETHEUS: "true"
      RABBITMQ_ERLANG_COOKIE: rabbitmq
      RABBITMQ_LOG: debug,+color

  timescaledb:
    build: dependencies/timescaledb/
    container_name: iot-timescaledb-1
    depends_on:
      - rabbitmq
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres 
      - IOT_PASSWORD=iot
      - IOT_REPLICATION_PASSWORD=iot_replication
      - IOT_MONITORING_PASSWORD=iot_monitoring
      - IOT_APP_PASSWORD=iot_app
      - IOT_READONLY_PASSWORD=iot_readonly
    volumes:
      - ./dependencies/timescaledb/postgresql.conf:/etc/postgresql.conf
    command: postgres -c config_file=/etc/postgresql.conf

  alloy:
    image: grafana/alloy:latest
    container_name: iot-alloy
    ports:
      - 12345:12345
    volumes:
      - ./dependencies/alloy/alloy-config.alloy:/etc/alloy/config.alloy
      - volume_iot_log:/tmp/app-logs
    command: run --server.http.listen-addr=0.0.0.0:12345 --storage.path=/var/lib/alloy/data /etc/alloy/config.alloy
    depends_on:
      - loki

  loki:
    image: grafana/loki:main
    container_name: iot-loki
    ports:
      - "3100:3100"
    volumes:
      - ./dependencies/loki/loki-config.yaml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml

  prometheus:
    image: prom/prometheus
    container_name: iot-prometheus
    volumes:
      - ./dependencies/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  node-exporter:
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    # https://hub.docker.com/r/prom/node-exporter/tags
    image: prom/node-exporter:v1.2.0
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
  cadvisor:
    expose:
      - 8000
    # https://hub.docker.com/r/google/cadvisor/tags
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux

  grafana:
    image: grafana/grafana:11.4.0
    container_name: iot-grafana
    depends_on:
      - timescaledb
      - loki
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
      - GF_FEATURE_TOGGLES_ENABLE=accessControlOnCall
      - GF_INSTALL_PLUGINS=https://storage.googleapis.com/integration-artifacts/grafana-lokiexplore-app/grafana-lokiexplore-app-latest.zip;grafana-lokiexplore-app
      # ,lant-statusmap-panel,grafana-piechart-panel
      - GF_DASHBOARDS_MIN_REFRESH_INTERVAL=1s
    volumes:
      - ./dependencies/grafana/provisioning:/etc/grafana/provisioning
  
  sensor-simulation-0: &sensor-simulation
    depends_on:
      - rabbitmq
      - timescaledb
    build:
      context: .          
      dockerfile: ./cmd/sensor-simulation/Dockerfile
      target: dev
    container_name: iot-sensor-simulation-0
    volumes:
      # go-air dependant
      - ./cmd/sensor-simulation:/app/cmd/sensor-simulation        # Mount the specific service's code
      - ./internal:/app/internal              # Mount shared internal code
      - ./assets:/app/assets                  # Mount assets if needed by the API
      - ./utils:/app/utils                    # Mount utilities like scripts
      - ./go.mod:/app/go.mod                  # Track Go dependencies
      - ./go.sum:/app/go.sum
    environment:
      - SENSOR_SERIAL_NUMBER=AAD-1123
      - SENSOR_SAMPLE_FREQUENCY=10000.0
      - RABBIT_AMQP_CONN_STRING=amqp://guest:guest@iot-rabbitmq:5672/
      - RABBIT_MQTT_CONN_STRING=mqtt://guest:guest@iot-rabbitmq:1883/
      - RABBIT_STREAM_CONN_STRING=rabbitmq-stream://guest:guest@iot-rabbitmq:5552/
      - POSTGRES_CONN_STRING=postgres://postgres:postgres@iot-timescaledb-1:5432/iot

  # sensor-simulation-1:
  #   << : *sensor-simulation
  #   container_name: iot-sensor-simulation-1
  #   environment:
  #     - SENSOR_SERIAL_NUMBER=BBB-3423
  #     - SENSOR_SAMPLE_FREQUENCY=10.0
  #     - RABBIT_AMQP_CONN_STRING=amqp://guest:guest@iot-rabbitmq:5672/
  #     - RABBIT_MQTT_CONN_STRING=mqtt://guest:guest@iot-rabbitmq:1883/
  #     - RABBIT_STREAM_CONN_STRING=rabbitmq-stream://guest:guest@iot-rabbitmq:5552/
  #     - POSTGRES_CONN_STRING=postgres://postgres:postgres@iot-timescaledb-1:5432/iot

  iot-api:
    depends_on:
      - rabbitmq
      - timescaledb
    build:
      context: .          
      dockerfile: ./cmd/iot-api/Dockerfile
      target: dev
    container_name: iot-api
    volumes:
      # go-air dependant
      - ./cmd/iot-api:/app/cmd/iot-api        # Mount the specific service's code
      - ./internal:/app/internal              # Mount shared internal code
      - ./assets:/app/assets                  # Mount assets if needed by the API
      - ./utils:/app/utils                    # Mount utilities like scripts
      - ./go.mod:/app/go.mod                  # Track Go dependencies
      - ./go.sum:/app/go.sum
    ports:
      - "8080:8080"
    environment:
      - RABBIT_AMQP_CONN_STRING=amqp://guest:guest@iot-rabbitmq:5672/
      - POSTGRES_CONN_STRING=postgres://postgres:postgres@iot-timescaledb-1:5432/iot

  sensor-logs-ingester:
    depends_on:
      - rabbitmq
      - timescaledb
    build:
      context: .          
      dockerfile: ./cmd/sensor-logs-ingester/Dockerfile
      target: dev
    container_name: iot-sensor-logs-ingester
    environment:
      - RABBIT_AMQP_CONN_STRING=amqp://guest:guest@iot-rabbitmq:5672/
      - POSTGRES_CONN_STRING=postgres://postgres:postgres@iot-timescaledb-1:5432/iot
    volumes:
      - volume_iot_log:/app/log  
      # go-air dependant
      - ./cmd/sensor-logs-ingester:/app/cmd/sensor-logs-ingester        # Mount the specific service's code
      - ./internal:/app/internal              # Mount shared internal code
      - ./assets:/app/assets                  # Mount assets if needed by the API
      - ./utils:/app/utils                    # Mount utilities like scripts
      - ./go.mod:/app/go.mod                  # Track Go dependencies
      - ./go.sum:/app/go.sum

  sensor-measurements-ingester-0: &sensor-measurements-ingester
    depends_on:
      - rabbitmq
      - timescaledb
    build:
      context: .          
      dockerfile: ./cmd/sensor-measurements-ingester/Dockerfile
      target: dev
    container_name: iot-sensor-measurements-ingester-0
    restart: unless-stopped
    volumes:
      # go-air dependant
      - ./cmd/sensor-measurements-ingester:/app/cmd/sensor-measurements-ingester        # Mount the specific service's code
      - ./internal:/app/internal              # Mount shared internal code
      - ./assets:/app/assets                  # Mount assets if needed by the API
      - ./utils:/app/utils                    # Mount utilities like scripts
      - ./go.mod:/app/go.mod                  # Track Go dependencies
      - ./go.sum:/app/go.sum
    environment:
      - RABBIT_AMQP_CONN_STRING=amqp://guest:guest@iot-rabbitmq:5672/
      - RABBIT_MQTT_CONN_STRING=mqtt://guest:guest@iot-rabbitmq:1883/
      - RABBIT_STREAM_CONN_STRING=rabbitmq-stream://guest:guest@iot-rabbitmq:5552/
      - POSTGRES_CONN_STRING=postgres://postgres:postgres@iot-timescaledb-1:5432/iot

  sensor-measurements-ingester-1:
    << : *sensor-measurements-ingester
    container_name: iot-sensor-measurements-ingester-1
  
  sensor-measurements-ingester-2:
    << : *sensor-measurements-ingester
    container_name: iot-sensor-measurements-ingester-2

  sensor-registry:
    depends_on:
      - rabbitmq
      - timescaledb
    build:
      context: .          
      dockerfile: ./cmd/sensor-registry/Dockerfile
      target: dev
    container_name: iot-sensor-registry
    environment:
      - RABBIT_AMQP_CONN_STRING=amqp://guest:guest@iot-rabbitmq:5672/
      - POSTGRES_CONN_STRING=postgres://postgres:postgres@iot-timescaledb-1:5432/iot
    volumes:
      # go-air dependant
      - ./cmd/sensor-registry:/app/cmd/sensor-registry        # Mount the specific service's code
      - ./internal:/app/internal              # Mount shared internal code
      - ./assets:/app/assets                  # Mount assets if needed by the API
      - ./utils:/app/utils                    # Mount utilities like scripts
      - ./go.mod:/app/go.mod                  # Track Go dependencies
      - ./go.sum:/app/go.sum

volumes:
  volume_iot_log:
    driver: local
    name: volume_iot_log
    external: false
