services:
  rabbitmq:
    build: dependencies/rabbitmq/
    container_name: iot-rabbitmq
    ports:
      - "5672:5672"   # RabbitMQ main port
      - "15672:15672" # Management UI port

  timescaledb:
    build: dependencies/timescaledb/
    container_name: iot-timescaledb-1
    depends_on:
      - rabbitmq
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres 
      - IOT_PASSWORD=iot
      - IOT_REPLICATION_PASSWORD=iot_replication
      - IOT_MONITORING_PASSWORD=iot_monitoring
      - IOT_APP_PASSWORD=iot_app
      - IOT_READONLY_PASSWORD=iot_readonly
    volumes:
      - ./dependencies/timescaledb/postgresql.conf:/etc/postgresql.conf
    command: postgres -c config_file=/etc/postgresql.conf

  alloy:
    image: grafana/alloy:latest
    container_name: iot-alloy
    ports:
      - 12345:12345
    volumes:
      - ./dependencies/alloy/alloy-config.alloy:/etc/alloy/config.alloy
      - iot_log_volume:/tmp/app-logs
    command: run --server.http.listen-addr=0.0.0.0:12345 --storage.path=/var/lib/alloy/data /etc/alloy/config.alloy
    depends_on:
      - loki

  loki:
    image: grafana/loki:main
    container_name: iot-loki
    ports:
      - "3100:3100"
    volumes:
      - ./dependencies/loki/loki-config.yaml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml

  grafana:
    image: grafana/grafana:latest
    container_name: iot-grafana
    depends_on:
      - timescaledb
      - loki
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
      - GF_FEATURE_TOGGLES_ENABLE=accessControlOnCall
      - GF_INSTALL_PLUGINS=https://storage.googleapis.com/integration-artifacts/grafana-lokiexplore-app/grafana-lokiexplore-app-latest.zip;grafana-lokiexplore-app
      - GF_DASHBOARDS_MIN_REFRESH_INTERVAL=1s
    volumes:
      - ./dependencies/grafana/provisioning:/etc/grafana/provisioning
  
  sensor-simulation:
    depends_on:
      - rabbitmq
      - timescaledb
      - sensor-registry
      - sensor-logs-ingester
      - sensor-measurements-ingester
    build:
      context: .          
      dockerfile: ./cmd/sensor-simulation/Dockerfile
    container_name: iot-sensor-simulation-1
    environment:
      - SENSOR_SERIAL_NUMBER=AAD-1123
      - SENSOR_SAMPLE_FREQUENCY=35.0
      - RABBIT_CONN_STRING=amqp://guest:guest@iot-rabbitmq:5672/
      - POSTGRES_CONN_STRING=postgres://postgres:postgres@iot-timescaledb-1:5432/iot
  
  iot-api:
    depends_on:
      - rabbitmq
      - timescaledb
    build:
      context: .          
      dockerfile: ./cmd/iot-api/Dockerfile
      target: staging
    container_name: iot-api
    volumes:
      - ./cmd/iot-api:/app/cmd/iot-api        # Mount the specific service's code
      - ./internal:/app/internal              # Mount shared internal code
      - ./assets:/app/assets                  # Mount assets if needed by the API
      - ./utils:/app/utils                    # Mount utilities like scripts
      - ./go.mod:/app/go.mod                  # Track Go dependencies
      - ./go.sum:/app/go.sum
    ports:
      - "8080:8080"
    environment:
      - RABBIT_CONN_STRING=amqp://guest:guest@iot-rabbitmq:5672/
      - POSTGRES_CONN_STRING=postgres://postgres:postgres@iot-timescaledb-1:5432/iot

  sensor-logs-ingester:
    depends_on:
      - rabbitmq
      - timescaledb
    build:
      context: .          
      dockerfile: ./cmd/sensor-logs-ingester/Dockerfile
    container_name: iot-sensor-logs-ingester
    environment:
      - RABBIT_CONN_STRING=amqp://guest:guest@iot-rabbitmq:5672/
      - POSTGRES_CONN_STRING=postgres://postgres:postgres@iot-timescaledb-1:5432/iot
    volumes:
      - iot_log_volume:/app/log  

  sensor-measurements-ingester:
    depends_on:
      - rabbitmq
      - timescaledb
    build:
      context: .          
      dockerfile: ./cmd/sensor-measurements-ingester/Dockerfile
    container_name: iot-sensor-measurements-ingester
    restart: unless-stopped
    environment:
      - RABBIT_CONN_STRING=amqp://guest:guest@iot-rabbitmq:5672/
      - POSTGRES_CONN_STRING=postgres://postgres:postgres@iot-timescaledb-1:5432/iot
  
  sensor-registry:
    depends_on:
      - rabbitmq
      - timescaledb
    build:
      context: .          
      dockerfile: ./cmd/sensor-registry/Dockerfile
    container_name: iot-sensor-registry
    environment:
      - RABBIT_CONN_STRING=amqp://guest:guest@iot-rabbitmq:5672/
      - POSTGRES_CONN_STRING=postgres://postgres:postgres@iot-timescaledb-1:5432/iot

volumes:
  iot_log_volume:
    driver: local
